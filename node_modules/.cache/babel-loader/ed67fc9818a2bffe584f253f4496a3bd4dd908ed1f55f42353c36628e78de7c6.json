{"ast":null,"code":"var _jsxFileName = \"/Users/chrisleft/dev/gym/swole/src/components/Exercises.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from '@mui/material';\nimport { Box, Stack, Typography } from '@mui/material';\nimport { exerciseOptions, fetchData } from '../utils/fetchData';\nimport ExerciseCard from './ExerciseCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exercises = _ref => {\n  _s();\n  let {\n    exercises,\n    setExercises,\n    bodyPart\n  } = _ref;\n  console.log(exercises);\n  const [currentPage, setCurrentPage] = useState(1);\n  const exercisesPerPage = 9;\n  const indexOfLastExercise = currentPage * exercisesPerPage;\n  const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage;\n  const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n  const paginate = (event, value) => {\n    setCurrentPage(value);\n    window.scrollTo({\n      top: 1800,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    id: \"exercises\",\n    sx: {\n      mt: {\n        lg: '110px'\n      }\n    },\n    mt: \"50px\",\n    p: \"20px\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      fontWeight: \"bold\",\n      sx: {\n        fontSize: {\n          lg: '44px',\n          xs: '30px'\n        }\n      },\n      mb: \"46px\",\n      children: \"Showing Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      sx: {\n        gap: {\n          lg: '107px',\n          xs: '50px'\n        }\n      },\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      children: currentExercises.map((exercise, idx) => /*#__PURE__*/_jsxDEV(ExerciseCard, {\n        exercise: exercise\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      mt: \"100px\",\n      alignItems: \"center\",\n      children: exercises.length > 9 && /*#__PURE__*/_jsxDEV(Pagination, {\n        color: \"standard\",\n        shape: \"rounded\",\n        count: Math.ceil(exercises.length),\n        page: currentPage,\n        onChange: paginate,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Exercises, \"6xAUoJ2motYJ38x4zeUWisA+X/4=\");\n_c = Exercises;\nexport default Exercises;\nvar _c;\n$RefreshReg$(_c, \"Exercises\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","Box","Stack","Typography","exerciseOptions","fetchData","ExerciseCard","jsxDEV","_jsxDEV","Exercises","_ref","_s","exercises","setExercises","bodyPart","console","log","currentPage","setCurrentPage","exercisesPerPage","indexOfLastExercise","indexOfFirstExercise","currentExercises","slice","paginate","event","value","window","scrollTo","top","behavior","id","sx","mt","lg","p","children","variant","fontWeight","fontSize","xs","mb","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","flexWrap","justifyContent","map","exercise","idx","alignItems","length","color","shape","count","Math","ceil","page","onChange","size","_c","$RefreshReg$"],"sources":["/Users/chrisleft/dev/gym/swole/src/components/Exercises.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Pagination } from '@mui/material'\nimport { Box, Stack, Typography } from '@mui/material'\nimport { exerciseOptions, fetchData } from '../utils/fetchData'\nimport ExerciseCard from './ExerciseCard'\n\nconst Exercises = ({ exercises, setExercises, bodyPart}) => {\n    console.log(exercises)\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const exercisesPerPage = 9\n    \n    const indexOfLastExercise = currentPage * exercisesPerPage;\n\n    const indexOfFirstExercise = indexOfLastExercise - exercisesPerPage\n\n    const currentExercises = exercises.slice(indexOfFirstExercise, indexOfLastExercise);\n\n    const paginate = (event, value) => {\n        setCurrentPage(value)\n        window.scrollTo({ top: 1800, behavior: 'smooth' })\n    }\n  return (\n    <Box id='exercises'\n        sx={{mt: {lg: '110px'}}}\n        mt='50px'\n        p='20px'\n        >\n        <Typography variant=\"h4\" fontWeight=\"bold\" sx={{ fontSize: { lg: '44px', xs: '30px' } }} mb=\"46px\">Showing Results</Typography>\n        <Stack direction=\"row\" sx={{ gap: { lg: '107px', xs: '50px' } }} flexWrap=\"wrap\" justifyContent=\"center\">\n            {currentExercises.map((exercise, idx) => (\n            <ExerciseCard key={idx} exercise={exercise} />\n            ))}\n        </Stack>\n        <Stack mt='100px' alignItems='center'>\n            {exercises.length > 9 && (\n                <Pagination\n                    color='standard'\n                    shape='rounded'\n                    count={Math.ceil(exercises.length)}\n                    page={currentPage}\n                    onChange={paginate}\n                    size='large'\n                >\n\n                </Pagination>\n            )}\n        </Stack>\n    </Box>\n  )\n}\n\nexport default Exercises"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}