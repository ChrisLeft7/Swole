{"ast":null,"code":"import React from'react';import{Box,Stack,Typography}from'@mui/material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExerciseVideos=function ExerciseVideos(_ref){var _exerciseVideos$slice;var exerciseVideos=_ref.exerciseVideos,name=_ref.name;console.log(exerciseVideos);if(!exerciseVideos.length)return'Loading....';return/*#__PURE__*/_jsxs(Box,{sx:{marginTop:{lg:'200px',xs:'20px'}},p:\"20px\",children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",mb:\"33px\",children:[\"Watch \",/*#__PURE__*/_jsx(\"span\",{style:{color:'blue',textTransform:'capitalize'},children:name}),\" videos\"]}),/*#__PURE__*/_jsx(Stack,{justifyContent:\"flex-start\",flexWrap:\"wrap\",alignItems:\"center\",sx:{flexDirection:{lg:'row'},gap:{lg:'110px',xs:'0'}},children:exerciseVideos===null||exerciseVideos===void 0?void 0:(_exerciseVideos$slice=exerciseVideos.slice(0,3))===null||_exerciseVideos$slice===void 0?void 0:_exerciseVideos$slice.map(function(item,index){return/*#__PURE__*/_jsxs(\"a\",{className:\"exercise-video\",href:\"https://www.youtube.com/watch?v=\".concat(item.video.videoId),target:\"_blank\",rel:\"noreferrer\",children:[/*#__PURE__*/_jsx(\"img\",{style:{borderTopLeftRadius:'20px'},src:item.video.thumbnails[0].url,alt:item.video.title}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{className:\"youtube-title\",sx:{fontSize:{lg:'28px',xs:'18px'}},fontWeight:600,children:item.video.title}),/*#__PURE__*/_jsx(Typography,{className:\"youtube-title\",fontSize:\"14px\",children:item.video.channelName})]})]},index);})})]});};export default ExerciseVideos;","map":{"version":3,"names":["React","Box","Stack","Typography","jsx","_jsx","jsxs","_jsxs","ExerciseVideos","_ref","_exerciseVideos$slice","exerciseVideos","name","console","log","length","sx","marginTop","lg","xs","p","children","variant","mb","style","color","textTransform","justifyContent","flexWrap","alignItems","flexDirection","gap","slice","map","item","index","className","href","concat","video","videoId","target","rel","borderTopLeftRadius","src","thumbnails","url","alt","title","fontSize","fontWeight","channelName"],"sources":["/Users/chrisleft/dev/gym/swole/src/components/ExerciseVideos.js"],"sourcesContent":["import React from 'react'\nimport { Box, Stack, Typography } from '@mui/material'\n\nconst ExerciseVideos = ({ exerciseVideos, name }) => {\n    console.log(exerciseVideos)\n    if(!exerciseVideos.length) return 'Loading....'\n  return (\n    <Box sx={{ marginTop: {lg: '200px', xs: '20px'}}} p='20px'>\n        <Typography variant='h4' mb='33px'>\n            Watch <span style={{color: 'blue', textTransform: 'capitalize'}}>{name}</span> videos\n        </Typography>\n        <Stack justifyContent='flex-start' flexWrap='wrap' alignItems='center'\n            sx={{\n                flexDirection: {lg: 'row'},\n                gap: {lg: '110px', xs: '0'}\n            }}\n        >\n            {exerciseVideos?.slice(0, 3)?.map((item, index) => (\n                 <a\n                 key={index}\n                 className=\"exercise-video\"\n                 href={`https://www.youtube.com/watch?v=${item.video.videoId}`}\n                 target=\"_blank\"\n                 rel=\"noreferrer\"\n               >\n                <img style={{ borderTopLeftRadius: '20px' }} src={item.video.thumbnails[0].url} alt={item.video.title} />\n                <Box>\n                    <Typography className='youtube-title' sx={{ fontSize: { lg: '28px', xs: '18px' } }} fontWeight={600}>\n                        {item.video.title}\n                    </Typography>\n                    <Typography className='youtube-title' fontSize=\"14px\">\n                        {item.video.channelName}\n                    </Typography>\n                </Box>\n                </a>\n            ))}\n        </Stack>\n    </Box>\n  )\n}\n\nexport default ExerciseVideos;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,GAAG,CAAEC,KAAK,CAAEC,UAAU,KAAQ,eAAe,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEtD,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAAC,IAAA,CAAiC,KAAAC,qBAAA,IAA3B,CAAAC,cAAc,CAAAF,IAAA,CAAdE,cAAc,CAAEC,IAAI,CAAAH,IAAA,CAAJG,IAAI,CAC1CC,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC,CAC3B,GAAG,CAACA,cAAc,CAACI,MAAM,CAAE,MAAO,aAAa,CACjD,mBACER,KAAA,CAACN,GAAG,EAACe,EAAE,CAAE,CAAEC,SAAS,CAAE,CAACC,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,MAAM,CAAC,CAAE,CAACC,CAAC,CAAC,MAAM,CAAAC,QAAA,eACtDd,KAAA,CAACJ,UAAU,EAACmB,OAAO,CAAC,IAAI,CAACC,EAAE,CAAC,MAAM,CAAAF,QAAA,EAAC,QACzB,cAAAhB,IAAA,SAAMmB,KAAK,CAAE,CAACC,KAAK,CAAE,MAAM,CAAEC,aAAa,CAAE,YAAY,CAAE,CAAAL,QAAA,CAAET,IAAI,EAAQ,UAClF,GAAa,cACbP,IAAA,CAACH,KAAK,EAACyB,cAAc,CAAC,YAAY,CAACC,QAAQ,CAAC,MAAM,CAACC,UAAU,CAAC,QAAQ,CAClEb,EAAE,CAAE,CACAc,aAAa,CAAE,CAACZ,EAAE,CAAE,KAAK,CAAC,CAC1Ba,GAAG,CAAE,CAACb,EAAE,CAAE,OAAO,CAAEC,EAAE,CAAE,GAAG,CAC9B,CAAE,CAAAE,QAAA,CAEDV,cAAc,SAAdA,cAAc,kBAAAD,qBAAA,CAAdC,cAAc,CAAEqB,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,UAAAtB,qBAAA,iBAA3BA,qBAAA,CAA6BuB,GAAG,CAAC,SAACC,IAAI,CAAEC,KAAK,qBACzC5B,KAAA,MAEA6B,SAAS,CAAC,gBAAgB,CAC1BC,IAAI,oCAAAC,MAAA,CAAqCJ,IAAI,CAACK,KAAK,CAACC,OAAO,CAAG,CAC9DC,MAAM,CAAC,QAAQ,CACfC,GAAG,CAAC,YAAY,CAAArB,QAAA,eAEjBhB,IAAA,QAAKmB,KAAK,CAAE,CAAEmB,mBAAmB,CAAE,MAAO,CAAE,CAACC,GAAG,CAAEV,IAAI,CAACK,KAAK,CAACM,UAAU,CAAC,CAAC,CAAC,CAACC,GAAI,CAACC,GAAG,CAAEb,IAAI,CAACK,KAAK,CAACS,KAAM,EAAG,cACzGzC,KAAA,CAACN,GAAG,EAAAoB,QAAA,eACAhB,IAAA,CAACF,UAAU,EAACiC,SAAS,CAAC,eAAe,CAACpB,EAAE,CAAE,CAAEiC,QAAQ,CAAE,CAAE/B,EAAE,CAAE,MAAM,CAAEC,EAAE,CAAE,MAAO,CAAE,CAAE,CAAC+B,UAAU,CAAE,GAAI,CAAA7B,QAAA,CAC/Fa,IAAI,CAACK,KAAK,CAACS,KAAK,EACR,cACb3C,IAAA,CAACF,UAAU,EAACiC,SAAS,CAAC,eAAe,CAACa,QAAQ,CAAC,MAAM,CAAA5B,QAAA,CAChDa,IAAI,CAACK,KAAK,CAACY,WAAW,EACd,GACX,GAdAhB,KAAK,CAeP,EACP,CAAC,EACE,GACN,CAEV,CAAC,CAED,cAAe,CAAA3B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}