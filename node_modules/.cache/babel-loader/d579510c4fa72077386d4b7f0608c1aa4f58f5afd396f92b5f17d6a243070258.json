{"ast":null,"code":"var _jsxFileName = \"/Users/chrisleft/dev/gym/swole/src/components/Detail.js\";\nimport React from 'react';\nimport { Typography, Stack, Button } from '@mui/material';\nimport BodyPartImage from '../assets/body-part.png';\nimport TargetImage from '../assets/target.png';\nimport EquipmentImage from '../assets/equipment.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Detail = _ref => {\n  let {\n    exerciseDetail\n  } = _ref;\n  // const { gifUrl, name, target, equipment } = exerciseDetail;\n  const {\n    bodyPart,\n    gifUrl,\n    name,\n    target,\n    equipment\n  } = exerciseDetail;\n  const extraDetail = [{\n    icon: BodyPartImage,\n    name: bodyPart\n  }, {\n    icon: TargetImage,\n    name: target\n  }, {\n    icon: EquipmentImage,\n    name: equipment\n  }];\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: \"60px\",\n    sx: {\n      flexDirection: {\n        lg: 'row'\n      },\n      p: '20px',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: gifUrl,\n      loading: \"lazy\",\n      className: \"detail-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      sx: {\n        gap: {\n          lg: '35px',\n          xs: '20px'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"If you wanna get those \", target, \" yoked, \", name, \"s are the way to go. This exercise targets the \", bodyPart, \" muscles and requires a \", equipment]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), extraDetail.map(item => /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        gap: \"24px\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            background: 'lightblue',\n            borderRadius: '50%',\n            width: '100px',\n            height: '100px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.icon,\n            style: {\n              width: '50px',\n              height: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, item.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = Detail;\nexport default Detail;\nvar _c;\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","Typography","Stack","Button","BodyPartImage","TargetImage","EquipmentImage","jsxDEV","_jsxDEV","Detail","_ref","exerciseDetail","bodyPart","gifUrl","name","target","equipment","extraDetail","icon","gap","sx","flexDirection","lg","p","alignItems","children","src","loading","className","fileName","_jsxFileName","lineNumber","columnNumber","xs","variant","map","item","direction","background","borderRadius","width","height","style","_c","$RefreshReg$"],"sources":["/Users/chrisleft/dev/gym/swole/src/components/Detail.js"],"sourcesContent":["import React from 'react'\nimport { Typography, Stack, Button } from '@mui/material'\nimport BodyPartImage from '../assets/body-part.png'\nimport TargetImage from '../assets/target.png'\nimport EquipmentImage from '../assets/equipment.png'\n\nconst Detail = ({ exerciseDetail }) => {\n    // const { gifUrl, name, target, equipment } = exerciseDetail;\n    const { bodyPart, gifUrl, name, target, equipment } = exerciseDetail;\n\n    const extraDetail = [\n        {\n            icon: BodyPartImage,\n            name: bodyPart\n        },\n        {\n            icon: TargetImage,\n            name: target\n        },\n        {\n            icon: EquipmentImage,\n            name: equipment\n        }\n    ]\n\n  return (\n    <Stack gap='60px' sx={{flexDirection: { lg: 'row' }, p: '20px', alignItems: 'center'}}\n    >\n        <img src={gifUrl} loading= 'lazy' className='detail-image' />\n        <Stack sx={{ gap: {lg: '35px', xs: '20px'}}}>\n            <Typography variant='h3'>\n                {name}\n            </Typography>\n            <Typography variant='h6'>\n                If you wanna get those {target} yoked, {name}s are the way to go.\n                This exercise targets the {bodyPart} muscles and requires a {equipment}\n            </Typography>\n            {extraDetail.map((item) => (\n                <Stack key={item.name} direction='row' gap='24px' alignItems='center'>\n                    <Button sx={{ background: 'lightblue', borderRadius: '50%', width: '100px', height: '100px'}}>\n                        <img src={item.icon} style={{ width: '50px', height: '50px'}} />\n                    </Button>\n                    <Typography variant='h5'>\n                        {item.name}\n                    </Typography>\n                </Stack>\n            ))}\n        </Stack>\n    </Stack>\n  )\n}\n\nexport default Detail"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AACzD,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,cAAc,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAD,IAAA;EAC9B;EACA,MAAM;IAAEE,QAAQ;IAAEC,MAAM;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAGL,cAAc;EAEpE,MAAMM,WAAW,GAAG,CAChB;IACIC,IAAI,EAAEd,aAAa;IACnBU,IAAI,EAAEF;EACV,CAAC,EACD;IACIM,IAAI,EAAEb,WAAW;IACjBS,IAAI,EAAEC;EACV,CAAC,EACD;IACIG,IAAI,EAAEZ,cAAc;IACpBQ,IAAI,EAAEE;EACV,CAAC,CACJ;EAEH,oBACER,OAAA,CAACN,KAAK;IAACiB,GAAG,EAAC,MAAM;IAACC,EAAE,EAAE;MAACC,aAAa,EAAE;QAAEC,EAAE,EAAE;MAAM,CAAC;MAAEC,CAAC,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAElFjB,OAAA;MAAKkB,GAAG,EAAEb,MAAO;MAACc,OAAO,EAAE,MAAM;MAACC,SAAS,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7DxB,OAAA,CAACN,KAAK;MAACkB,EAAE,EAAE;QAAED,GAAG,EAAE;UAACG,EAAE,EAAE,MAAM;UAAEW,EAAE,EAAE;QAAM;MAAC,CAAE;MAAAR,QAAA,gBACxCjB,OAAA,CAACP,UAAU;QAACiC,OAAO,EAAC,IAAI;QAAAT,QAAA,EACnBX;MAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACbxB,OAAA,CAACP,UAAU;QAACiC,OAAO,EAAC,IAAI;QAAAT,QAAA,GAAC,yBACE,EAACV,MAAM,EAAC,UAAQ,EAACD,IAAI,EAAC,iDACnB,EAACF,QAAQ,EAAC,0BAAwB,EAACI,SAAS;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7D,EACZf,WAAW,CAACkB,GAAG,CAAEC,IAAI,iBAClB5B,OAAA,CAACN,KAAK;QAAiBmC,SAAS,EAAC,KAAK;QAAClB,GAAG,EAAC,MAAM;QAACK,UAAU,EAAC,QAAQ;QAAAC,QAAA,gBACjEjB,OAAA,CAACL,MAAM;UAACiB,EAAE,EAAE;YAAEkB,UAAU,EAAE,WAAW;YAAEC,YAAY,EAAE,KAAK;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAO,CAAE;UAAAhB,QAAA,eACzFjB,OAAA;YAAKkB,GAAG,EAAEU,IAAI,CAAClB,IAAK;YAACwB,KAAK,EAAE;cAAEF,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAM;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3D,eACTxB,OAAA,CAACP,UAAU;UAACiC,OAAO,EAAC,IAAI;UAAAT,QAAA,EACnBW,IAAI,CAACtB;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACD;MAAA,GANLI,IAAI,CAACtB,IAAI;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAQxB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEZ,CAAC;AAAAW,EAAA,GA5CKlC,MAAM;AA8CZ,eAAeA,MAAM;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}